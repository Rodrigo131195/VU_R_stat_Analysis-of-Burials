# Sort the dataframe by position number
position_df <- position_df[order(position_df$Position), ]
# Filter flint_artifacts for left-flexed orientation
left_flexed_df <- flint_artifacts[flint_artifacts$Orientation == "Left Flexed", ]
# Filter flint_artifacts for right-flexed orientation
right_flexed_df <- flint_artifacts[flint_artifacts$Orientation == "Right Flexed", ]
# Calculate the frequency of each position number for left-flexed orientation
left_flexed_counts <- table(left_flexed_df$Position)
# Calculate the frequency of each position number for right-flexed orientation
right_flexed_counts <- table(right_flexed_df$Position)
# Convert the tables to dataframes
left_flexed_df <- as.data.frame(left_flexed_counts)
right_flexed_df <- as.data.frame(right_flexed_counts)
# Rename the columns
colnames(left_flexed_df) <- c("Position", "Left_Flexed_Frequency")
colnames(right_flexed_df) <- c("Position", "Right_Flexed_Frequency")
# Merge the dataframes by position number
positions_df <- merge(left_flexed_df, right_flexed_df, by = "Position", all = TRUE)
# Replace NA values with 0
positions_df[is.na(positions_df)] <- 0
# Display the dataframe
positions_df
# Merge positions_df with position_df by Position
positions <- merge(positions_df, position_df, by = "Position", all = TRUE)
# Display the merged dataframe
positions
# Subset the Artifacts dataframe to include only rows containing "Flint daggers" or "Flint blades"
flint_artifacts <- artifacts[grepl("Flint daggers and blades", artifacts$Artifact), ]
# Subset the locations dataframe to include only rows with "left-flexed" or "right-flexed" body orientation
flexed_orientations <- locations[locations$Orientation %in% c("Left Flexed", "Right Flexed"), ]
# Filter flint_artifacts based on Grave_ID in flexed_orientations
flint_artifacts <- flint_artifacts[flint_artifacts$"Grave ID" %in% flexed_orientations$"Grave ID", ]
flint_artifacts <- merge(flint_artifacts, flexed_orientations[c("Grave ID", "Orientation")], by = "Grave ID", all.x = TRUE)
# Calculate the frequency of each position number
position_counts <- table(flint_artifacts$Position)
# Convert the table to a dataframe
position_df <- as.data.frame(position_counts)
# Rename the columns
colnames(position_df) <- c("Position", "Frequency")
# Sort the dataframe by position number
position_df <- position_df[order(position_df$Position), ]
# Filter flint_artifacts for left-flexed orientation
left_flexed_df <- flint_artifacts[flint_artifacts$Orientation == "Left Flexed", ]
# Filter flint_artifacts for right-flexed orientation
right_flexed_df <- flint_artifacts[flint_artifacts$Orientation == "Right Flexed", ]
# Calculate the frequency of each position number for left-flexed orientation
left_flexed_counts <- table(left_flexed_df$Position)
# Calculate the frequency of each position number for right-flexed orientation
right_flexed_counts <- table(right_flexed_df$Position)
# Convert the tables to dataframes
left_flexed_df <- as.data.frame(left_flexed_counts)
right_flexed_df <- as.data.frame(right_flexed_counts)
# Rename the columns
colnames(left_flexed_df) <- c("Position", "Left_Flexed_Frequency")
colnames(right_flexed_df) <- c("Position", "Right_Flexed_Frequency")
# Merge the dataframes by position number
positions_df <- merge(left_flexed_df, right_flexed_df, by = "Position", all = TRUE)
# Replace NA values with 0
positions_df[is.na(positions_df)] <- 0
# Display the dataframe
positions_df
# Merge positions_df with position_df by Position
positions <- merge(positions_df, position_df, by = "Position", all = TRUE)
# Calculate the total counts for each position
positions$total_counts <- positions$Left_Flexed_Frequency + positions$Right_Flexed_Frequency
# Calculate the percentage of each position based on total counts
positions$Left_Flexed_Percentage <- (positions$Left_Flexed_Frequency / positions$total_counts) * 100
positions$Right_Flexed_Percentage <- (positions$Right_Flexed_Frequency / positions$total_counts) * 100
# Create a matrix for the barplot
barplot_matrix <- cbind(positions$Left_Flexed_Percentage, positions$Right_Flexed_Percentage)
# Set names for the legend
legend_names <- c("Left Flexed", "Right Flexed")
# Create the barplot
barplot(barplot_matrix, beside = TRUE, ylim = c(0, 100),
names.arg = 1:8, col = c("blue", "red"),
xlab = "Position", ylab = "Percentage",
main = "Percentage of Positions by Orientation")
# Subset the Artifacts dataframe to include only rows containing "Flint daggers" or "Flint blades"
flint_artifacts <- artifacts[grepl("Flint daggers and blades", artifacts$Artifact), ]
# Subset the locations dataframe to include only rows with "left-flexed" or "right-flexed" body orientation
flexed_orientations <- locations[locations$Orientation %in% c("Left Flexed", "Right Flexed"), ]
# Filter flint_artifacts based on Grave_ID in flexed_orientations
flint_artifacts <- flint_artifacts[flint_artifacts$"Grave ID" %in% flexed_orientations$"Grave ID", ]
flint_artifacts <- merge(flint_artifacts, flexed_orientations[c("Grave ID", "Orientation")], by = "Grave ID", all.x = TRUE)
# Calculate the frequency of each position number
position_counts <- table(flint_artifacts$Position)
# Convert the table to a dataframe
position_df <- as.data.frame(position_counts)
# Rename the columns
colnames(position_df) <- c("Position", "Frequency")
# Sort the dataframe by position number
position_df <- position_df[order(position_df$Position), ]
# Filter flint_artifacts for left-flexed orientation
left_flexed_df <- flint_artifacts[flint_artifacts$Orientation == "Left Flexed", ]
# Filter flint_artifacts for right-flexed orientation
right_flexed_df <- flint_artifacts[flint_artifacts$Orientation == "Right Flexed", ]
# Calculate the frequency of each position number for left-flexed orientation
left_flexed_counts <- table(left_flexed_df$Position)
# Calculate the frequency of each position number for right-flexed orientation
right_flexed_counts <- table(right_flexed_df$Position)
# Convert the tables to dataframes
left_flexed_df <- as.data.frame(left_flexed_counts)
right_flexed_df <- as.data.frame(right_flexed_counts)
# Rename the columns
colnames(left_flexed_df) <- c("Position", "Left_Flexed_Frequency")
colnames(right_flexed_df) <- c("Position", "Right_Flexed_Frequency")
# Merge the dataframes by position number
positions_df <- merge(left_flexed_df, right_flexed_df, by = "Position", all = TRUE)
# Replace NA values with 0
positions_df[is.na(positions_df)] <- 0
# Display the dataframe
positions_df
# Merge positions_df with position_df by Position
positions <- merge(positions_df, position_df, by = "Position", all = TRUE)
# Calculate the total counts for each position
positions$total_counts <- positions$Left_Flexed_Frequency + positions$Right_Flexed_Frequency
# Calculate the percentage of each position based on total counts
positions$Left_Flexed_Percentage <- (positions$Left_Flexed_Frequency / positions$total_counts) * 100
positions$Right_Flexed_Percentage <- (positions$Right_Flexed_Frequency / positions$total_counts) * 100
# Create a matrix for the barplot
barplot_matrix <- cbind(positions$Left_Flexed_Percentage, positions$Right_Flexed_Percentage)
# Set names for the legend
legend_names <- c("Left Flexed", "Right Flexed")
# Create unique names for each position for both left and right flexed orientations
position_names <- c(paste("Left", 1:8, sep = "_"), paste("Right", 1:8, sep = "_"))
# Create the barplot
barplot(barplot_matrix, beside = TRUE, ylim = c(0, 100),
names.arg = position_names, col = c(rep("blue", 8), rep("red", 8)),
xlab = "Position", ylab = "Percentage",
main = "Percentage of Positions by Orientation")
# Add legend
legend("topright", legend = legend_names, fill = c("blue", "red"))
# Subset the Artifacts dataframe to include only rows containing "Flint daggers" or "Flint blades"
flint_artifacts <- artifacts[grepl("Flint daggers and blades", artifacts$Artifact), ]
# Subset the locations dataframe to include only rows with "left-flexed" or "right-flexed" body orientation
flexed_orientations <- locations[locations$Orientation %in% c("Left Flexed", "Right Flexed"), ]
# Filter flint_artifacts based on Grave_ID in flexed_orientations
flint_artifacts <- flint_artifacts[flint_artifacts$"Grave ID" %in% flexed_orientations$"Grave ID", ]
flint_artifacts <- merge(flint_artifacts, flexed_orientations[c("Grave ID", "Orientation")], by = "Grave ID", all.x = TRUE)
# Calculate the frequency of each position number
position_counts <- table(flint_artifacts$Position)
# Convert the table to a dataframe
position_df <- as.data.frame(position_counts)
# Rename the columns
colnames(position_df) <- c("Position", "Frequency")
# Sort the dataframe by position number
position_df <- position_df[order(position_df$Position), ]
# Filter flint_artifacts for left-flexed orientation
left_flexed_df <- flint_artifacts[flint_artifacts$Orientation == "Left Flexed", ]
# Filter flint_artifacts for right-flexed orientation
right_flexed_df <- flint_artifacts[flint_artifacts$Orientation == "Right Flexed", ]
# Calculate the frequency of each position number for left-flexed orientation
left_flexed_counts <- table(left_flexed_df$Position)
# Calculate the frequency of each position number for right-flexed orientation
right_flexed_counts <- table(right_flexed_df$Position)
# Convert the tables to dataframes
left_flexed_df <- as.data.frame(left_flexed_counts)
right_flexed_df <- as.data.frame(right_flexed_counts)
# Rename the columns
colnames(left_flexed_df) <- c("Position", "Left_Flexed_Frequency")
colnames(right_flexed_df) <- c("Position", "Right_Flexed_Frequency")
# Merge the dataframes by position number
positions_df <- merge(left_flexed_df, right_flexed_df, by = "Position", all = TRUE)
# Replace NA values with 0
positions_df[is.na(positions_df)] <- 0
# Display the dataframe
positions_df
# Merge positions_df with position_df by Position
positions <- merge(positions_df, position_df, by = "Position", all = TRUE)
# Calculate the total counts for each position
positions$total_counts <- positions$Left_Flexed_Frequency + positions$Right_Flexed_Frequency
# Calculate the percentage of each position based on total counts
positions$Left_Flexed_Percentage <- (positions$Left_Flexed_Frequency / positions$total_counts) * 100
positions$Right_Flexed_Percentage <- (positions$Right_Flexed_Frequency / positions$total_counts) * 100
# Create a matrix for the barplot
barplot_matrix <- cbind(positions$Left_Flexed_Percentage, positions$Right_Flexed_Percentage)
# Set names for the legend
legend_names <- c("Left Flexed", "Right Flexed")
# Create unique names for each position for both left and right flexed orientations
position_names <- c(paste("L", 1:8, sep = "-"), paste("R", 1:8, sep = "-"))
# Create the barplot
barplot(barplot_matrix, beside = TRUE, ylim = c(0, 100),
names.arg = position_names, col = c(rep("blue", 8), rep("red", 8)),
xlab = "Position", ylab = "Percentage",
main = "Percentage of Positions by Orientation")
# Add legend
legend("topright", legend = legend_names, fill = c("blue", "red"))
# Subset the Artifacts dataframe to include only rows containing "Flint daggers" or "Flint blades"
flint_artifacts <- artifacts[grepl("Flint daggers and blades", artifacts$Artifact), ]
# Subset the locations dataframe to include only rows with "left-flexed" or "right-flexed" body orientation
flexed_orientations <- locations[locations$Orientation %in% c("Left Flexed", "Right Flexed"), ]
# Filter flint_artifacts based on Grave_ID in flexed_orientations
flint_artifacts <- flint_artifacts[flint_artifacts$"Grave ID" %in% flexed_orientations$"Grave ID", ]
flint_artifacts <- merge(flint_artifacts, flexed_orientations[c("Grave ID", "Orientation")], by = "Grave ID", all.x = TRUE)
# Calculate the frequency of each position number
position_counts <- table(flint_artifacts$Position)
# Convert the table to a dataframe
position_df <- as.data.frame(position_counts)
# Rename the columns
colnames(position_df) <- c("Position", "Frequency")
# Sort the dataframe by position number
position_df <- position_df[order(position_df$Position), ]
# Filter flint_artifacts for left-flexed orientation
left_flexed_df <- flint_artifacts[flint_artifacts$Orientation == "Left Flexed", ]
# Filter flint_artifacts for right-flexed orientation
right_flexed_df <- flint_artifacts[flint_artifacts$Orientation == "Right Flexed", ]
# Calculate the frequency of each position number for left-flexed orientation
left_flexed_counts <- table(left_flexed_df$Position)
# Calculate the frequency of each position number for right-flexed orientation
right_flexed_counts <- table(right_flexed_df$Position)
# Convert the tables to dataframes
left_flexed_df <- as.data.frame(left_flexed_counts)
right_flexed_df <- as.data.frame(right_flexed_counts)
# Rename the columns
colnames(left_flexed_df) <- c("Position", "Left_Flexed_Frequency")
colnames(right_flexed_df) <- c("Position", "Right_Flexed_Frequency")
# Merge the dataframes by position number
positions_df <- merge(left_flexed_df, right_flexed_df, by = "Position", all = TRUE)
# Replace NA values with 0
positions_df[is.na(positions_df)] <- 0
# Display the dataframe
positions_df
# Merge positions_df with position_df by Position
positions <- merge(positions_df, position_df, by = "Position", all = TRUE)
# Calculate the total counts for each position
positions$total_counts <- positions$Left_Flexed_Frequency + positions$Right_Flexed_Frequency
# Calculate the percentage of each position based on total counts
positions$Left_Flexed_Percentage <- (positions$Left_Flexed_Frequency / positions$total_counts) * 100
positions$Right_Flexed_Percentage <- (positions$Right_Flexed_Frequency / positions$total_counts) * 100
# Create a matrix for the barplot
barplot_matrix <- cbind(positions$Left_Flexed_Percentage, positions$Right_Flexed_Percentage)
# Set names for the legend
legend_names <- c("Left Flexed", "Right Flexed")
# Create unique names for each position for both left and right flexed orientations
position_names <- c(paste(1:8), paste("R", 1:8, sep = "-"))
# Create the barplot
barplot(barplot_matrix, beside = TRUE, ylim = c(0, 100),
names.arg = position_names, col = c(rep("blue", 8), rep("red", 8)),
xlab = "Position", ylab = "Percentage",
main = "Percentage of Positions by Orientation")
# Add legend
legend("topright", legend = legend_names, fill = c("blue", "red"))
# Step 1: Subset the Artifacts dataframe to include only rows containing "Flint daggers" or "Flint blades"
flint_artifacts <- artifacts[grepl("Flint daggers and blades", artifacts$Artifact), ]
# Step 2: Subset the locations dataframe to include only rows with "left-flexed" or "right-flexed" body orientation
flexed_orientations <- locations[locations$Orientation %in% c("Left Flexed", "Right Flexed"), ]
# Step 3: Filter flint_artifacts based on Grave_ID in flexed_orientations
flint_artifacts <- merge(flint_artifacts, flexed_orientations[c("Grave ID", "Orientation")], by = "Grave ID", all.x = TRUE)
# Step 4: Calculate the frequency of each position number
position_counts <- table(flint_artifacts$Position)
# Step 5: Convert the table to a dataframe and rename the columns
position_df <- as.data.frame(position_counts)
colnames(position_df) <- c("Position", "Frequency")
# Step 6: Sort the dataframe by position number
position_df <- position_df[order(position_df$Position), ]
# Step 7: Filter flint_artifacts for left-flexed orientation
left_flexed_df <- flint_artifacts[flint_artifacts$Orientation == "Left Flexed", ]
# Step 8: Filter flint_artifacts for right-flexed orientation
right_flexed_df <- flint_artifacts[flint_artifacts$Orientation == "Right Flexed", ]
# Step 9: Calculate the frequency of each position number for left-flexed orientation
left_flexed_counts <- table(left_flexed_df$Position)
# Step 10: Calculate the frequency of each position number for right-flexed orientation
right_flexed_counts <- table(right_flexed_df$Position)
# Step 11: Convert the tables to dataframes and rename the columns
left_flexed_df <- as.data.frame(left_flexed_counts)
right_flexed_df <- as.data.frame(right_flexed_counts)
colnames(left_flexed_df) <- c("Position", "Left_Flexed_Frequency")
colnames(right_flexed_df) <- c("Position", "Right_Flexed_Frequency")
# Step 12: Merge the dataframes by position number
positions_df <- merge(left_flexed_df, right_flexed_df, by = "Position", all = TRUE)
# Step 13: Replace NA values with 0
positions_df[is.na(positions_df)] <- 0
# Step 14: Merge positions_df with position_df by Position
positions <- merge(positions_df, position_df, by = "Position", all = TRUE)
# Step 15: Calculate the total counts for each position
positions$total_counts <- positions$Left_Flexed_Frequency + positions$Right_Flexed_Frequency
# Step 16: Calculate the percentage of each position based on total counts
positions$Left_Flexed_Percentage <- (positions$Left_Flexed_Frequency / positions$total_counts) * 100
positions$Right_Flexed_Percentage <- (positions$Right_Flexed_Frequency / positions$total_counts) * 100
# Step 17: Create a matrix for the barplot
barplot_matrix <- cbind(positions$Left_Flexed_Percentage, positions$Right_Flexed_Percentage)
# Step 18: Set names for the legend
legend_names <- c("Left Flexed", "Right Flexed")
# Step 19: Create unique names for each position for both left and right flexed orientations
position_names <- c(paste(1:8), paste(1:8))
# Step 20: Create the barplot
barplot(barplot_matrix, beside = TRUE, ylim = c(0, 100),
names.arg = position_names, col = c(rep("blue", 8), rep("red", 8)),
xlab = "Position", ylab = "Percentage",
main = "Percentage of Positions by Orientation")
# Step 21: Add legend
legend("topright", legend = legend_names, fill = c("blue", "red"))
# Subset "Flint blades"
flint_artifacts <- artifacts[grepl("Flint daggers and blades", artifacts$Artifact), ]
# Subset  "left-flexed" or "right-flexed"
flexed_orientations <- locations[locations$Orientation %in% c("Left Flexed", "Right Flexed"), ]
# Filter flint_artifacts
flint_artifacts <- merge(flint_artifacts, flexed_orientations[c("Grave ID", "Orientation")], by = "Grave ID", all.x = TRUE)
# Calculate frequency
position_counts <- table(flint_artifacts$Position)
position_df <- as.data.frame(position_counts)
colnames(position_df) <- c("Position", "Frequency")
position_df <- position_df[order(position_df$Position), ]
# Filter flint_artifacts
left_flexed_df <- flint_artifacts[flint_artifacts$Orientation == "Left Flexed", ]
right_flexed_df <- flint_artifacts[flint_artifacts$Orientation == "Right Flexed", ]
# Calculate frequency flexed orientations
left_flexed_counts <- table(left_flexed_df$Position)
right_flexed_counts <- table(right_flexed_df$Position)
left_flexed_df <- as.data.frame(left_flexed_counts)
right_flexed_df <- as.data.frame(right_flexed_counts)
colnames(left_flexed_df) <- c("Position", "Left_Flexed_Frequency")
colnames(right_flexed_df) <- c("Position", "Right_Flexed_Frequency")
positions_df <- merge(left_flexed_df, right_flexed_df, by = "Position", all = TRUE)
# Step 14: Merge positions_df with position_df by Position
positions <- merge(positions_df, position_df, by = "Position", all = TRUE)
# Step 15: Calculate the total counts for each position
positions$total_counts <- positions$Left_Flexed_Frequency + positions$Right_Flexed_Frequency
# Step 16: Calculate the percentage of each position based on total counts
positions$Left_Flexed_Percentage <- (positions$Left_Flexed_Frequency / positions$total_counts) * 100
positions$Right_Flexed_Percentage <- (positions$Right_Flexed_Frequency / positions$total_counts) * 100
# Step 17: Create a matrix for the barplot
barplot_matrix <- cbind(positions$Left_Flexed_Percentage, positions$Right_Flexed_Percentage)
# Step 18: Set names for the legend
legend_names <- c("Left Flexed", "Right Flexed")
# Step 19: Create unique names for each position for both left and right flexed orientations
position_names <- c(paste(1:8), paste(1:8))
# Step 20: Create the barplot
barplot(barplot_matrix, beside = TRUE, ylim = c(0, 100),
names.arg = position_names, col = c(rep("blue", 8), rep("red", 8)),
xlab = "Position", ylab = "Percentage",
main = "Percentage of Positions by Orientation")
# Step 21: Add legend
legend("topright", legend = legend_names, fill = c("blue", "red"))
# Subset "Flint blades"
flint_artifacts <- artifacts[grepl("Flint daggers and blades", artifacts$Artifact), ]
# Subset "left-flexed" or "right-flexed"
flexed_orientations <- locations[locations$Orientation %in% c("Left Flexed", "Right Flexed"), ]
# Filter flint_artifacts
flint_artifacts <- merge(flint_artifacts, flexed_orientations[c("Grave ID", "Orientation")], by = "Grave ID", all.x = TRUE)
# Calculate frequency
position_counts <- table(flint_artifacts$Position)
position_df <- as.data.frame(position_counts)
colnames(position_df) <- c("Position", "Frequency")
position_df <- position_df[order(position_df$Position), ]
# Filter flint_artifacts for left-flexed orientation
left_flexed_df <- flint_artifacts[flint_artifacts$Orientation == "Left Flexed", ]
# Filter flint_artifacts for right-flexed orientation
right_flexed_df <- flint_artifacts[flint_artifacts$Orientation == "Right Flexed", ]
# Calculate frequency for left-flexed orientation
left_flexed_counts <- table(left_flexed_df$Position)
# Calculate frequency for right-flexed orientation
right_flexed_counts <- table(right_flexed_df$Position)
left_flexed_df <- as.data.frame(left_flexed_counts)
right_flexed_df <- as.data.frame(right_flexed_counts)
colnames(left_flexed_df) <- c("Position", "Left_Flexed_Frequency")
colnames(right_flexed_df) <- c("Position", "Right_Flexed_Frequency")
positions_df <- merge(left_flexed_df, right_flexed_df, by = "Position", all = TRUE)
positions <- merge(positions_df, position_df, by = "Position", all = TRUE)
# Calculate the total count
positions$total_counts <- positions$Left_Flexed_Frequency + positions$Right_Flexed_Frequency
# Calculate the percentage
positions$Left_Flexed_Percentage <- (positions$Left_Flexed_Frequency / positions$total_counts) * 100
positions$Right_Flexed_Percentage <- (positions$Right_Flexed_Frequency / positions$total_counts) * 100
# Create matrix for the barplot
barplot_matrix <- rbind(positions$Left_Flexed_Percentage, positions$Right_Flexed_Percentage)
# Create legend names
legend_names <- c("Left Flexed", "Right Flexed")
# Create position names
position_names <- c(paste(1:8), paste(1:8))
# Create the barplot
barplot(barplot_matrix, beside = TRUE, ylim = c(0, 100),
names.arg = position_names, col = c(rep("blue", 8), rep("red", 8)),
xlab = "Position", ylab = "Percentage",
main = "Percentage of Positions by Orientation")
# Add legend
legend("topright", legend = legend_names, fill = c("blue", "red"))
# Subset "Flint blades"
flint_artifacts <- artifacts[grepl("Flint daggers and blades", artifacts$Artifact), ]
# Subset "left-flexed" orientation
left_flexed_df <- flint_artifacts[flint_artifacts$Orientation == "Left Flexed", ]
# Subset "right-flexed" orientation
right_flexed_df <- flint_artifacts[flint_artifacts$Orientation == "Right Flexed", ]
# Calculate frequency for left-flexed orientation
left_flexed_counts <- table(left_flexed_df$Position)
# Calculate frequency for right-flexed orientation
right_flexed_counts <- table(right_flexed_df$Position)
# Create dataframes for left and right flexed orientations
left_flexed_df <- data.frame(Position = as.numeric(names(left_flexed_counts)), Frequency = as.numeric(left_flexed_counts))
right_flexed_df <- data.frame(Position = as.numeric(names(right_flexed_counts)), Frequency = as.numeric(right_flexed_counts))
# Calculate total count for each orientation
total_left <- sum(left_flexed_df$Frequency)
total_right <- sum(right_flexed_df$Frequency)
# Calculate percentage for left and right flexed orientations
left_flexed_df$Percentage <- (left_flexed_df$Frequency / total_left) * 100
right_flexed_df$Percentage <- (right_flexed_df$Frequency / total_right) * 100
# Plot for left-flexed orientation
barplot(left_flexed_df$Percentage, names.arg = left_flexed_df$Position, col = "blue",
xlab = "Position", ylab = "Percentage", ylim = c(0, 100),
main = "Percentage of Positions for Left-Flexed Orientation")
# Subset "Flint blades"
flint_artifacts <- artifacts[grepl("Flint daggers and blades", artifacts$Artifact), ]
# Subset  "left-flexed" or "right-flexed"
flexed_orientations <- locations[locations$Orientation %in% c("Left Flexed", "Right Flexed"), ]
# Filter flint_artifacts
flint_artifacts <- merge(flint_artifacts, flexed_orientations[c("Grave ID", "Orientation")], by = "Grave ID", all.x = TRUE)
# Calculate frequency
position_counts <- table(flint_artifacts$Position)
position_df <- as.data.frame(position_counts)
colnames(position_df) <- c("Position", "Frequency")
position_df <- position_df[order(position_df$Position), ]
# Filter flint_artifacts
left_flexed_df <- flint_artifacts[flint_artifacts$Orientation == "Left Flexed", ]
right_flexed_df <- flint_artifacts[flint_artifacts$Orientation == "Right Flexed", ]
# Calculate frequency flexed orientations
left_flexed_counts <- table(left_flexed_df$Position)
right_flexed_counts <- table(right_flexed_df$Position)
left_flexed_df <- as.data.frame(left_flexed_counts)
right_flexed_df <- as.data.frame(right_flexed_counts)
colnames(left_flexed_df) <- c("Position", "Left_Flexed_Frequency")
colnames(right_flexed_df) <- c("Position", "Right_Flexed_Frequency")
positions_df <- merge(left_flexed_df, right_flexed_df, by = "Position", all = TRUE)
positions <- merge(positions_df, position_df, by = "Position", all = TRUE)
# Calculate the total count
positions$total_counts <- positions$Left_Flexed_Frequency + positions$Right_Flexed_Frequency
# Calculate the percentage
positions$Left_Flexed_Percentage <- (positions$Left_Flexed_Frequency / positions$total_counts) * 100
positions$Right_Flexed_Percentage <- (positions$Right_Flexed_Frequency / positions$total_counts) * 100
barplot_matrix <- cbind(positions$Left_Flexed_Percentage, positions$Right_Flexed_Percentage)
legend_names <- c("Left Flexed", "Right Flexed")
position_names <- c(paste(1:8), paste(1:8))
# Create the barplot
barplot(barplot_matrix, beside = TRUE, ylim = c(0, 100),
names.arg = position_names, col = c(rep("blue", 8), rep("red", 8)),
xlab = "Position", ylab = "Percentage",
main = "Percentage of Positions by Orientation")
legend("topright", legend = legend_names, fill = c("blue", "red"))
# Calculate Shannon entropy for left flexed orientation
left_entropy <- -sum(positions$Left_Flexed_Percentage/100 * log(positions$Left_Flexed_Percentage/100), na.rm = TRUE)
# Calculate Shannon entropy for right flexed orientation
right_entropy <- -sum(positions$Right_Flexed_Percentage/100 * log(positions$Right_Flexed_Percentage/100), na.rm = TRUE)
# Create a table to present the results
entropy_table <- data.frame(
Orientation = c("Left Flexed", "Right Flexed"),
Shannon_Entropy = c(left_entropy, right_entropy)
)
entropy_table
# Calculate Shannon entropy for left flexed orientation
left_ent <- -sum(positions$Left_Flexed_Percentage/100 * log(positions$Left_Flexed_Percentage/100), na.rm = TRUE)
# Calculate Shannon entropy for right flexed orientation
right_ent <- -sum(positions$Right_Flexed_Percentage/100 * log(positions$Right_Flexed_Percentage/100), na.rm = TRUE)
# Create a table to present the results
small_table <- data.frame(
Orientation = c("Left Flexed", "Right Flexed"),
Shannon_Entropy = c(left_ent, right_ent)
)
small_table
# Calculate Shannon entropy
left_ent <- -sum(positions$Left_Flexed_Percentage/100 * log(positions$Left_Flexed_Percentage/100), na.rm = TRUE)
right_ent <- -sum(positions$Right_Flexed_Percentage/100 * log(positions$Right_Flexed_Percentage/100), na.rm = TRUE)
# Table
small_table <- data.frame(
Orientation = c("Left Flexed", "Right Flexed"),
Shannon_Entropy = c(left_ent, right_ent)
)
small_table
# Subset "Flint blades"
flint_artifacts <- artifacts[grepl("Flint daggers and blades", artifacts$Artifact), ]
# Subset  "left-flexed" or "right-flexed"
flexed_orientations <- locations[locations$Orientation %in% c("Left Flexed", "Right Flexed"), ]
# Filter flint_artifacts
flint_artifacts <- merge(flint_artifacts, flexed_orientations[c("Grave ID", "Orientation")], by = "Grave ID", all.x = TRUE)
# Calculate frequency
position_counts <- table(flint_artifacts$Position)
position_df <- as.data.frame(position_counts)
colnames(position_df) <- c("Position", "Frequency")
position_df <- position_df[order(position_df$Position), ]
# Filter flint_artifacts
left_flexed_df <- flint_artifacts[flint_artifacts$Orientation == "Left Flexed", ]
right_flexed_df <- flint_artifacts[flint_artifacts$Orientation == "Right Flexed", ]
# Calculate frequency flexed orientations
left_flexed_counts <- table(left_flexed_df$Position)
right_flexed_counts <- table(right_flexed_df$Position)
left_flexed_df <- as.data.frame(left_flexed_counts)
right_flexed_df <- as.data.frame(right_flexed_counts)
colnames(left_flexed_df) <- c("Position", "Left_Flexed_Frequency")
colnames(right_flexed_df) <- c("Position", "Right_Flexed_Frequency")
positions_df <- merge(left_flexed_df, right_flexed_df, by = "Position", all = TRUE)
positions <- merge(positions_df, position_df, by = "Position", all = TRUE)
# Calculate the total count
positions$total_counts <- positions$Left_Flexed_Frequency + positions$Right_Flexed_Frequency
# Calculate the percentage
positions$Left_Flexed_Percentage <- (positions$Left_Flexed_Frequency / 37) * 100
positions$Right_Flexed_Percentage <- (positions$Right_Flexed_Frequency / 101) * 100
barplot_matrix <- cbind(positions$Left_Flexed_Percentage, positions$Right_Flexed_Percentage)
legend_names <- c("Left Flexed", "Right Flexed")
position_names <- c(paste(1:8), paste(1:8))
# Create the barplot
barplot(barplot_matrix, beside = TRUE, ylim = c(0, 100),
names.arg = position_names, col = c(rep("blue", 8), rep("red", 8)),
xlab = "Position", ylab = "Percentage",
main = "Percentage of Positions by Orientation")
legend("topright", legend = legend_names, fill = c("blue", "red"))
# Calculate Shannon entropy
left_ent <- -sum(positions$Left_Flexed_Percentage/100 * log(positions$Left_Flexed_Percentage/100), na.rm = TRUE)
right_ent <- -sum(positions$Right_Flexed_Percentage/100 * log(positions$Right_Flexed_Percentage/100), na.rm = TRUE)
# Table
small_table <- data.frame(
Orientation = c("Left Flexed", "Right Flexed"),
Shannon_Entropy = c(left_ent, right_ent)
)
small_table
